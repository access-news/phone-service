TR2 IMPLEMENTATION PROPOSAL

I.     Overview of the proposed TR replacement
II.    Proposed stages of implementation
III.   Transition
IV.    Hosting
V.     Envisioned technology stack
VI.    Brief description of proposed stages



I. OVERVIEW OF THE PROPOSED TR REPLACEMENT

    Web-based services hosted in the cloud for subscribers to listen to
    audio content and for readers to generate them.

    Main services:
    1. Web-based content delivery
    2. Web-based recording
    3. Legacy phone service for subscribers and readers who opt out 
       of the web-based solution.



II. PROPOSED STAGES OF IMPLEMENTATION

    The stages below are not meant to be rigid milestones where previous
    stages have to be completed in order for the next one to start.

        STAGE 1: Central digital audio repository

        STAGE 2: Web service for accessible online content
                (extensible with new formats)

        STAGE 3: Online recording capability

        STAGE 4: Provide native apps on other platforms
                (Android, iPhone)

        STAGE 5: Replace TR phone service completely



III. TRANSITION

    Stages in Section II. would also promote transitioning from the old
    service by actively making high quality digital recordings available
    online but they would still be available on TR for subscribers with
    limited choices albeit with degraded quality (TRM conversion is
    unforgiving.) STAGE 5 would replace this last resort with a more
    modern implementation.

    1. Local Changes

       a. READERS

          Replace headset phones in the recording booths with equipment that 
          allows to record digitally.

          Some cost-effective ways to achieve this would be to re-use old PCs
          that are slow for general office use and install a user- and resource-
          friendly Linux distribution (e.g. Xubuntu) and an open-source
          recording application (e.g. Audacity). This would also improve an
          organization's ecological footprint by reducing e-waste.
          (Extra grant opportunities?)

          As an alternative, micro-computers could be set up. For example,
          a Raspberry PI costs $25 with more than enough computing power
          and it is the size of a credit card.

       b. LISTENERS

          Only readers would be affected.


    2. Remote Changes

        a. READERS

           It is possible to recreate the same recording process that
           volunteers currently use to record through the phone system
           but this is an edge case.

           Readers who record digitally tend to be more flexible based
           on their experience with technology. At this time there are
           many options to submit their recordings, such as email them,
           share an iCloud link, upload to Google Drive, etc.

           See Section VI. below and also "TR2-vision.txt".

        b. LISTENERS
           Keep using the replicated TR phone menu system and/or start
           exploring the online alternatives.



IV. HOSTING

    Predicted ceiling with all sub-services implemented and running with
    high usage: $600/month. This estimate is derived from web-hosting
    (or server costs) and phone usage costs.

    For the servers I chose the Google Cloud Platform as a starting point
    based on past and current experiences. To start out, I recommend
    2 servers (one for development and one for production) with a humble
    configuration (1 CPU and 100 GB storage each) and with the total cost
    of $54, if both server is running 24/7. Because only running time
    is billed and parts of the active development can be done on local
    SFTB machines, the servers would only be up for short periods of
    time. The production server would start running constantly after
    STAGE 2 is ready. Resources can be added if needed anytime for any
    duration. For example, extra CPUs or memory can be attached for the
    testing server for 2 hours, and the extra cost would only be billed
    for those 2 hours.

    Phone related costs based on Twilio's current prices and average
    reader minutes based on people who deliver content via phone lines:
        Average minutes/month: 4157, rounding up to 5000.
        1 toll-free number:                    $2
        Received minutes to toll-free numbers: $0.0275/minute
        Programmable call recording:           $0.0025/minute
        TOTAL: $150 (= 5000 * 0.0275 + 5000*0.0025 + 2)



V. ENVISIONED TECHNOLOGY STACK

    1. Back end

       Use the Phoenix framework with all the advantages of Elixir and
       the Erlang VM.


    2. Front end

       A Web application that would conform to the Progressive Web Apps
       requirements with public APIs promoting

            * the consumption of the service in more flexible ways

                E.g.,
                You would like to create a micro-computer based
                hardware receiver so you would create an app
                that consumes that API in a special way.

            * collaboration across organizations.

       Use the common web standard technologies to achieve maximum
       accessibility: HTML, CSS, JavaScript. PureScript would be the
       ideal tool to create the entire front end as it has no runtime and
       it is easy to reference it from JavaScript and vice versa.



VI. BRIEF DESCRIPTION OF PROPOSED STAGES

    STAGE 1: Central digital audio repository

        Create a central storage service as consolidated destination of
        digital recordings from remote readers.

        RATIONALE:
        Currently, digital recordings have to be collected from
        multiple sources (e.g., e-mail attachments, google drive,
        dropbox etc.) that makes maintenance time consuming.

        See "TR2-vision.txt" > EASIER CONTRIBUTION, item 1.


    STAGE 2: Web service for accessible online content

        Envisioned features:

        * speech recognition for navigation

        * easily extensible menu with text-to-speech

        * ability to tag content

        * create playlists

        * leave audio comments (audio and text via speech-to-text)

          and add many more gradually once a base system is running.


    STAGE 3: Online recording capability

        See "TR2-vision.txt" > EASIER CONTRIBUTION


    STAGE 4: Provide native apps on other platforms
             (iPhone, Android, browser extension, electron apps)

        Either create native iPhone or Android apps or integrate with
        default applications (e.g., use Voice Memo app on iPhones to
        record and add an option to upload to TR2, if possible).

        RATIONALE:
        90 % of the new readers embrace the idea of digital recording but
        they struggle to get their readings back to us. This means extra
        admin time for "tech support" communication. STAGE 4 could help
        by allowing people to open the TR2 recording service in their
        browsers (iPhone's Safari, Android's Chrome etc.) but it adds
        cognitive overhead of learning a new tool. Enabling readers to
        use applications they're are already accustomed to would reduce
        this overhead. This stage would also add a maintenance overhead
        on our part to always make sure that our native app or integration
        solution is working even as these platforms keep evolving.


    STAGE 5: Replace TR phone service completely

        Create a phone service in the cloud for legacy access with as
        many of the online features above as possible.
